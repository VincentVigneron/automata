language: rust
sudo: false
os:
    - linux
dist: trusty
matrix:
    fast_finish: true
    include:
        - rust: nightly
        - rust: stable
        - rust: 1.16.0

cache:
    apt: true
    directories:
        - target/debug/deps
        - target/debug/build

addons:
    apt:
        packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc
            - binutils-dev

# Coverage report
# Upload docs
after_success:
    - |
        if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
            LOCAL="~/.local" &&
            export PATH=$LOCAL/bin:$PATH &&
            wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
            tar xzf master.tar.gz &&
            mkdir kcov-master/build &&
            cd kcov-master/build &&
            cmake -DCMAKE_INSTALL_PREFIX:PATH=$LOCAL .. &&
            make &&
            make install &&
            cd ../.. &&
            ls target/debug &&
            RUSTFLAGS="-C link-dead-code" cargo test --no-run &&
            for file in target/debug/automaton-*; do
                if [[ "${file: -2}" != ".d" ]]; then
                    mkdir -p "target/cov/$(basename $file)";
                    kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file";
                fi;
            done &&
            kcov --coveralls-id=$TRAVIS_JOB_ID --merge target/cov target/cov/*'
        fi
    - |
        if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" && "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" == "master" ]]; then
            cargo doc &&
            echo "<meta http-equiv=refresh content=0;url=automaton/index.html>" > target/doc/index.html &&
            git clone https://github.com/davisp/ghp-import.git &&
            ./ghp-import/ghp_import.py -n -p -f -m "Documentation upload" -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc &&
            echo "Uploaded documentation"
        fi
